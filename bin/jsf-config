#!/bin/bash

# ---------------------------------------------
has_pythia5()
{
  if [ -f $ROOTSYS/lib/libEGPythia.so ] ; then 
	echo "jsfpythia5"
  fi
}

# ---------------------------------------------
lciolib()
{
  if [ "X$LCIO" != "X" ] ; then
	echo " -L$LCIO/lib -L$LCIO/sio/lib -llcio -lsio -lz"
  fi
}  

# ---------------------------------------------
print_help()
{
cat <<EOF
 jsf-config [options]
 options = --has_pythia5  --lciolib  --help
           --cflags --bindir --libdir --incdir --tmpdir --fc
           --bits --hosttype --gcc_version --cc --gcc_v_major 
           --gcc_v_minor --gcc_v_patch --gcc_v_full
EOF
}

# ---------------------------------------------
cflags()
{
  if [ "X$JSFROOT" != "X" ] ; then 
	echo "-I$JSFROOT/include"
  fi
}

includes()
{
  incpath="-I. "
  if [ "X$JSFROOT" != "X" ] ; then
     incpath=" $incpath -I$JSFROOT/include "
  fi
  incpath=" $incpath -I$LCBASEDIR/include "
  if [ `uname -s` = Darwin ]; then
     incpath=" $incpath -I/usr/osxws/include "
  fi
  echo $incpath
}

bindir()
{
  if [ "X$JSFROOT" != "X" ] ; then 
	echo "$JSFROOT/bin"
  fi
}

incdir()
{
  if [ "X$JSFROOT" != "X" ] ; then 
	echo "$JSFROOT/include"
  fi
}

libdir()
{
  if [ "X$JSFROOT" != "X" ] ; then 
	echo "$JSFROOT/lib"
  fi
}

tmpdir()
{
  if [ "X$JSFROOT" != "X" ] ; then 
	echo "$JSFROOT/tmp"
  fi
}

fc()
{
 iret=`grep -c "#define __JSF_FORTRAN_COMPILER__" $LCBASEDIR/include/LCBASEConfig.h`
 if [ "x$iret" == "x1" ] ; then
   grep "#define __JSF_FORTRAN_COMPILER__" $LCBASEDIR/include/LCBASEConfig.h | sed -e "s/  */ /g" | \
       cut -d" " -f3
 fi
}


getconfig()
{
  iret=`grep -c "#define $1 " $LCBASEDIR/include/LCBASEConfig.h` 
  if [ "x$iret" == "x1" ] ; then
    grep "define $1 " $LCBASEDIR/include/LCBASEConfig.h | sed -e "s/  */ /g" | \
	cut -d" " -f3
  fi
}

hosttype()
{
 iret=`grep -c "#define __JSF_HOSTTYPE__ " $LCBASEDIR/include/LCBASEConfig.h`
 if [ "x$iret" == "x1" ] ; then
   grep "#define __JSF_HOSTTYPE__" $LCBASEDIR/include/LCBASEConfig.h | sed -e "s/  */ /g" | \
       cut -d" " -f3
 fi
}

bits()
{
  bits=`grep __BUILD_BITS__ ${LCBASEDIR}/include/LCBASEConfig.h | cut -d" " -f3`
  if [ "x${bits}" == "x" ] ; then
    bits=-m32
  fi
  echo ${bits}
}

gcc_version()
{
  vers=`grep __GNUC_VERSION__ ${LCBASEDIR}/include/LCBASEConfig.h | grep define | sed -e "s/  */ /g" | cut -d" " -f3`
  echo $vers
}

# ---------------------------------------------
while [ $# -ne 0 ] 
do 
  case "$1" in 
    --has_pythia5) has_pythia5 ;; 
    --lciolib) lciolib ;;
    --help) print_help ;;
    --cflags) cflags ;;
    --includes) includes ;;
    --bindir) bindir ;;
    --incdir) incdir ;;
    --libdir) libdir ;;
    --tmpdir) tmpdir ;;
    --fc) fc ;;
    --bits) bits ;;
    --hosttype) hosttype ;;
    --gcc_version) gcc_version ;;
    --cc) getconfig " __CC_COMPILER__ " ;;
    --gcc_v_major) getconfig "__GNUC_VERSION__" ;;
    --gcc_v_minor) getconfig "__GNUC_MINOR__" ;;
    --gcc_v_patch) getconfig "__GNUC_PATCHLEVEL__" ;;
    --gcc_v_full) getconfig "__GNUC_FULL_VERSION__" ;; 
    *)  print_help ;;
  esac
  shift
done

