XCOMM #---------------------------------------------------
XCOMM # Machine dependant configuration to build application.
XCOMM #---------------------------------------------------
XCOMM # 
XCOMM #  Required environment variable.
XCOMM #     ROOTSYS : ROOT top directory.
XCOMM # 
XCOMM #(History) 
XCOMM #  29-May-1999 Add EXTRACXXOPT in CXXFLAGS
XCOMM #              Define .cxx compile rule here.    
XCOMM #  4-Feb-2000 soname option in SOFLAGS for Linux is removed.
XCOMM # 
XCOMM # $Id$
XCOMM # 
#include "include/LCBASE.inc"
DllSuf        = $(SOEXT)
DylibSuf      = $(SOEXT)
SrcSuf        = cxx
ObjSuf        = o
HdrSuf        = h

LD            = $(CXX)
DYLDFLAGS     = $(SOFLAGS)
DYLIBFLAGS    = $(SOFLAGS)
DYLDEXTRALIBS = 
RCINTDEFINES  = 
PDFLIB        =

ROOTLIBS      = $(shell root-config --libs) -lMinuit
ROOTGLIBS     = $(shell root-config --glibs)

DEPENDFILES   = $(filter -I% -D%,$(CXXFLAGS)) $(INCPATH)

JSFTMPDIR     = $(shell jsf-config --tmpdir)
JSFBINDIR     = $(shell jsf-config --bindir)
JSFLIBDIR     = $(shell jsf-config --libdir)
JSFINCDIR     = $(shell jsf-config --incdir)
BUILDBITS     = $(shell jsf-config --bits)

AIXLIBS       =

#if GNUC_VERSION_CODE < GNUC_VERSION(3,3,0)
INSTALLFLAGS += -C
#endif

#ifndef __CERNLIB_PDFLIB__
CERNLIBLIBS   += pdflib804
#endif
#ifdef __LCLIBRAN_USE_RANMAR__
CERNLIBLIBS   += mathlib
#endif
CERNLIBLIBS   += packlib
CERNLIBS      = $(shell cernlib $(CERNLIBLIBS))


XCOMM #---------------------------------------------------

.SUFFIXES: .$(SrcSuf)

.$(SrcSuf).$(ObjSuf):
	$(CXX) $(CXXFLAGS) -c $<

XCOMM # -----------------------------------------------------
XCOMM # Linux with egcs
XCOMM # -----------------------------------------------------
#if defined(LinuxArchitecture)
SOEXT         = so
#if defined(__G77EGCS_LIBNAME__)
LIBF2C	      = -l$(G77EGCS_LIBNAME)
#endif
FC	      = $(shell jsf-config --fc)
CXX           = g++ -O2 -g
CXXFLAGS      = $(BUILDBITS) -Wall -fPIC -D__GFORTRAN__ \
		$(EXTRACXXOPT) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
SOFLAGS       = $(BUILDBITS) -shared -rdynamic
LDFLAGS       = $(BUILDBITS) $(ANALLIB) $(GLIBS) -rdynamic
LIBS          = $(ROOTLIBS) -lm -ldl
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib \
		-lXpm -lX11 $(LIBF2C) -lm -ldl
BLOCKDATA     = 
FFLAGS 	     += $(BUILDBITS) -fPIC
ifeq ($(shell jsf-config --hosttype),KEKCC) 
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib64 \
                -lXpm -lX11 $(LIBF2C) -lm -ldl
endif
DEPENDFILES  += $(shell cxxdepends)
#  ifdef InstallSharedLibrary
#  undef InstallSharedLibrary
#  endif
#  define InstallSharedLibrary(libname,rev,dest)                        @@\
install:: Concat(lib,libname.so.rev)                                    @@\
	MakeDir($(DESTDIR)dest)                                         @@\
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) Concat(lib,libname.so.rev) $(DESTDIR)dest @@\
	@T=`echo Concat($(DESTDIR)dest/lib,libname.so.rev) | sed 's/\.[^\.]*$$//'`;\
	set -x; $(RM) $$T && $(LN) Concat(lib,libname.so.rev) $$T     @@\
	@if $(SOSYMLINK); then (set -x; \
	$(RM) Concat($(DESTDIR)dest/lib,libname.so); \                @@\
	$(LN) Concat(lib,libname.so.rev) Concat($(DESTDIR)dest/lib,libname.so)); fi
#endif

XCOMM # -----------------------------------------------------
XCOMM # Cygwin architecture
XCOMM # -----------------------------------------------------
#if defined(cygwinArchitecture)
SOEXT         = dll
LIBF2C	      = -l$(G77EGCS_LIBNAME)
FC	      = g77
CXX           = g++ -O2 -g
CXXFLAGS      = -Wall \
		$(EXTRACXXOPT) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
SOFLAGS       = -shared -rdynamic
LDFLAGS       = $(ANALLIB) $(GLIBS) -rdynamic
LIBS          = $(ROOTLIBS) -lm -ldl
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib \
		-lXpm -lX11 $(LIBF2C) -lm -ldl
BLOCKDATA     = 
DEPENDFILES  += $(shell cxxdepends)
#endif

XCOMM # -----------------------------------------------------
XCOMM # MkLinux with egcs
XCOMM # -----------------------------------------------------
#if defined(PowerPCArchitecture)
#ifndef PPCArchitecture
#define PPCArchitecture
#endif
#endif
#if defined(PPCArchitecture)
SOEXT         = so
LIBF2C	      = -l$(G77EGCS_LIBNAME)
CXX           = g++ -O2
CXXFLAGS      = -Wall -fsigned-char -fPIC \
		$(EXTRACXXOPT) \
		$(shell jsf-config  --includes) \
		$(shell root-config --cflags)
SOFLAGS       = -shared -rdynamic
LDFLAGS       = $(ANALLIB) $(GLIBS) -rdynamic
LIBS          = $(ROOTLIBS) -lm -ldl
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib \
                -lXpm -lX11 $(LIBF2C) -lm -ldl
BLOCKDATA     = 
DEPENDFILES  += $(shell cxxdepends)
#endif

XCOMM # -----------------------------------------------------
XCOMM # MacOS X
XCOMM # -----------------------------------------------------
#if defined(MacOSXArchitecture) || defined(DarwinArchitecture)
#ifdef PpcDarwinArchitecture
#ifndef PPCArchitecture
#define PPCArchitecture
#endif
#ifndef PowerPCArchitecture
#define PowerPCArchitecture
#endif
#endif

SOEXT         = so
DylibSuf      = dylib	
LIBF2C	      = -l$(G77EGCS_LIBNAME)
RCINTDEFINES  = -D__DARWIN__
ifneq ($(shell which gfortran 2>&1 | grep -vc 'no gfortran'),0)
FC            = gfortran
FFLAGS        = $(BUILDBITS) -O0 -g -fno-second-underscore -D__GFORTRAN__
CC            = gcc
CFLAGS        = $(BUILDBITS) $(shell jsf-config --includes) \
	        $(shell root-config --cflags) -D__GFORTRAN__
CXX           = g++
CXXFLAGS      = $(BUILDBITS) -O -pipe -Wall -fsigned-char -D__GFORTRAN__ \
		$(EXTRACXXOPT) $(RCINTDEFINES) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
OSXVERSION    = $(shell sw_vers | sed -n 's/ProductVersion://p' | cut -d . -f 2)
ifeq ($(shell [ `echo $(OSXVERSION)` -ge 5 ] && echo 1),1)
SINGLE_MODULE = -single_module
endif
DYLIBFLAGS    = $(BUILDBITS) -dynamiclib -flat_namespace $(SINGLE_MODULE) -undefined dynamic_lookup
DYLDFLAGS     = $(BUILDBITS) -dynamiclib -flat_namespace $(SINGLE_MODULE) -undefined dynamic_lookup
/* SOFLAGS       = $(BUILDBITS) -bundle -flat_namespace -undefined dynamic_lookup */
SOFLAGS       = $(BUILDBITS) -dynamiclib -flat_namespace $(SINGLE_MODULE) -undefined dynamic_lookup
else
FC            = g77
FFLAGS        = -O0 -g -fno-second-underscore
CC            = gcc
CFLAGS        = $(shell jsf-config --includes) \
	        $(shell root-config --cflags)
CXX           = g++
CXXFLAGS      = -pipe -Wall -fsigned-char \
		$(EXTRACXXOPT) $(RCINTDEFINES) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
DYLIBFLAGS    = -dynamiclib -flat_namespace $(SINGLE_MODULE) -undefined suppress
DYLDFLAGS     = -dynamiclib -flat_namespace $(SINGLE_MODULE) -undefined suppress
SOFLAGS       = -bundle -flat_namespace -undefined suppress
endif
LDFLAGS       = $(BUILDBITS) $(ANALLIB) $(GLIBS) -Xlinker -bind_at_load
LIBS          = $(ROOTLIBS) -L/usr/oxws/lib -lm -ldl
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib \
                -lXpm -lX11 $(LIBF2C) -L/usr/osxws/lib -lm -ldl
/* DYLDEXTRALIBS = -lcc_dynamic */
PDFLIB	      = -lpdflib
BLOCKDATA     = 
DEPENDFILES  += $(shell cxxdepends)
INSTALLFLAGS = -C
#  ifdef InstallSharedLibrary
#  undef InstallSharedLibrary
#  endif
#  define InstallSharedLibrary(libname,rev,dest)                        @@\
install:: Concat(lib,libname.so.rev)                                    @@\
	MakeDir($(DESTDIR)dest)                                         @@\
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) Concat(lib,libname.so.rev) $(DESTDIR)dest @@\
	@T=`echo Concat($(DESTDIR)dest/lib,libname.so.rev) | sed 's/\.[^\.]*$$//'`;\
	set -x; $(RM) $$T && $(LN) Concat(lib,libname.so.rev) $$T     @@\
	@if $(SOSYMLINK); then (set -x; \
	$(RM) Concat($(DESTDIR)dest/lib,libname.so); \                @@\
	$(LN) Concat(lib,libname.so.rev) Concat($(DESTDIR)dest/lib,libname.so)); fi

#endif

XCOMM # -----------------------------------------------------
XCOMM # For Machten gcc (This is not tested yet.)
XCOMM # -----------------------------------------------------
#if defined(MachTenPPCArchitecture)
SOEXT         = so
LIBF2C        = -lf2c           
CXX           = g++ -O2
CXXFLAGS      = -Wall  -fno-rtti -fno-exceptions -fPIC \
		$(EXTRACXXOPT) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
SOFLAGS       = -shared -rdynamic
LDFLAGS       = $(ANALLIB) $(GLIBS) -rdynamic
LIBS          = $(ROOTLIBS) -lm -ldl
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -L/usr/X11R6/lib \
		-lXpm -lX11 $(LIBF2C) -lm -ldl
BLOCKDATA     = 
DEPENDFILES  += $(shell cxxdepends)
#endif

XCOMM # -----------------------------------------------------
XCOMM # HI-UX
XCOMM # -----------------------------------------------------
#if defined(hitachiArchitecture)
SOEXT         = sl
CXX           = g++ -O2
CXXFLAGS      = -Wall  -fno-rtti -fno-exceptions -fPIC \
		$(EXTRACXXOPT) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags) \
		$(USEFORTRAN)
SOFLAGS       = -nostdlib  -nostartfiles -Wl,-b,-E 
LDFLAGS       = $(ANALLIB) -Wl,+s $(GLIBS) $(F90LIB)
MYLDOPT       = -lmsl2 -L/lib/pa1.1 -lm
F90LIB        =  $(MYLDOPT) -Wl,-a,archive -lhf90math -lf90 \
		-Wl,-a,default -lc
LIBS          = $(ROOTLIBS) -lm -ldld
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) -lXpm -lX11 -lm -ldld
FC            = f90
USEFORTRAN    = -D_HIUX_FORTRAN
BLOCKDATA     = $(LCLIBROOT)/util/lcfull/src/prblk1.o \
		$(LCLIBROOT)/util/fortlib/src/uconst.o \
		$(LCLIBROOT)/simjlc/src/smrblk.o \
		$(LCLIBROOT)/util/ltkcl/cmbblk.o 
DEPENDFILES  += $(shell cxxdepends)
#endif


XCOMM # -----------------------------------------------------
XCOMM # HP-UX
XCOMM # -----------------------------------------------------
#if defined(HPArchitecture)
SOEXT         = sl
LIBF2C        = -L/opt/fortran/lib -lU77
CXX	      = aCC -O
CXXFLAGS      = +W70,495,740,749,829,823 -DR__ACC -z +Z \
		$(EXTRACXXOPT) \
		$(shell jsf-config --includes) \
		$(shell root-config --cflags)
SOFLAGS       = -b -z -Wl,+vnocompatwarnings -Wl,-E
LDFLAGS       = -z -Wl,+s -Wl,-E $(ANALLIB) $(GLIBS)
LIBS          = $(ROOTLIBS) -L/usr/lib -lm -ldld
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS) \
		$(LIBF2C) -L/usr/lib -lm -ldld
BLOCKDATA     = 
DEPENDFILES   += -I/opt/aCC/include -I/opt/aCC/include/iostream \
                -I/usr -I/usr/include
#endif

XCOMM # -----------------------------------------------------
XCOMM # AIX
XCOMM # -----------------------------------------------------
#if defined(AIXArchitecture)
SOEXT         = so
LIBF2C        =
CXX           = xlC
CXXFLAGS      = $(EXTRACXXOPT) -DAIX \
		$(shell jsf-config --includes) \
                $(shell root-config --cflags) \
		-I/usr/vacpp/include -brtl -bshared
SOFLAGS       = -p 0
LDFLAGS       = -brtl -bshared $(ANALLIB) $(GLIBS) -lxlf90
ROOTLIBS     := $(shell root-config --nonew --libs)
ROOTGLIBS    := $(shell root-config --nonew --glibs)
LIBS          = $(ROOTLIBS) -lxlf90
GLIBS         = $(ROOTLIBS) $(ROOTGLIBS)
BLOCKDATA     =
LD            = /usr/vacpp/bin/makeC++SharedLib -brtl -bshared
DEPENDFILES  += $(shell cxxdepends)
AIXLIBS       = $(ROOTLIBS)
#endif


GCCVER    = $(shell $(CXX) -dumpversion 2>/dev/null | sed -e 's;\..*;;')
ifeq ($(GCCVER),3)
   CXXFLAGS += -D__USEISOCXX__
endif
ifeq ($(GCCVER),4)
   CXXFLAGS += -D__USEISOCXX__
endif
ifeq ($(GCCVER),5)
   CXXFLAGS += -D__USEISOCXX__
endif

CLHEPVER      = $(shell clhep-config --version | sed -e 's;CLHEP \([1-9]\)\..*;\1;')
CXXFLAGS += -D__CLHEPVERSION__=$(CLHEPVER)

#define __HasJSFFromLCIO__ 1
CXXFLAGS += -D__HasJSFFromLCIO__

ifeq (X$(shell uname -p),Xi386)
CXXFLAGS += -D__LITTLE_ENDIAN__
else
CXXFLAGS += -D__BIG_ENDIAN__
endif
